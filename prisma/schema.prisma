// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PRICE {
  CHEAP
  REGULAR
  EXPENSIVE
}

model Restaurant {
  id          Int      @id @default(autoincrement())
  name        String
  main_image  String
  description String
  images      String[]
  open_time   String
  close_time  String
  slug        String   @unique
  price       PRICE
  items       Item[]
  location    Location @relation(fields: [location_id], references: [id])
  location_id Int
  cuisine     Cuisine  @relation(fields: [cuisine_id], references: [id])
  cuisine_id  Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  reviews     Review[]
}

model Item {
  id            Int        @id @default(autoincrement())
  name          String
  price         String
  description   String
  Restaurant    Restaurant @relation(fields: [restaurant_id], references: [id])
  restaurant_id Int
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Location {
  id         Int          @id @default(autoincrement())
  name       String
  Restaurant Restaurant[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model Cuisine {
  id         Int          @id @default(autoincrement())
  name       String
  Restaurant Restaurant[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model User {
  id         Int    @id @default(autoincrement())
  first_name String
  last_name  String
  city       String
  email      String @unique
  phone      String
  password   String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  reviews    Review[]
}

model Review {
  id         Int    @id @default(autoincrement())
  text       String
  first_name String
  last_name  String
  rating     Float

  restaurant    Restaurant @relation(fields: [restaurant_id], references: [id])
  restaurant_id Int

  user    User @relation(fields: [user_id], references: [id])
  user_id Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
